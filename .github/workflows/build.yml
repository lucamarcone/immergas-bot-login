name: Build

on:
  pull_request:
  push:
    branches:
      - main
      - support/*
    tags:
      - '**'

concurrency: 
  group: ${{ github.repository }}
  cancel-in-progress: false

jobs:

  init:

    runs-on: [ self-hosted, linux, gcp ]

    outputs:
      make_artifact: ${{ steps.info.outputs.make_artifact }}
      repository_name: ${{ steps.info.outputs.repository_name }}
      maven_revision: ${{ steps.info.outputs.maven_revision }}

    steps:
      - name: Get git info
        uses: quix-it/gha-git-info@v1
        id: info

  build:

    runs-on: [ self-hosted, linux, gcp ]
    needs: init
    container:
      image: supportquix/maven:3.8-amazoncorretto-17
    env:
      VERSION_PLACEHOLDER: 999.9.9-SNAPSHOT

    steps:

      - name: Clean up workspace
        uses: quix-it/gha-clean-workspace@v1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: /repo
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Recursively replace version placeholder
        if: ${{ env.VERSION_PLACEHOLDER != '' }}
        run: |
          export PH_ESCAPED=${VERSION_PLACEHOLDER//./\\.}
          find . -type f -not -path "**/.github/workflows/*" -exec grep -Iq "$PH_ESCAPED" {} \; -print0 | xargs -rt0 -n1 sed -i "s/$PH_ESCAPED/${{ needs.init.outputs.maven_revision }}/g"

      - name: Initialise maven config
        run: cp settings.xml $MAVEN_CONFIG/settings.xml

      - name: Pick the right maven target
        id: maven_tuning
        run: |
          if [ "${{ needs.init.outputs.make_artifact }}" == "true" ]; then
            echo '::set-output name=target::deploy'
          else
            echo '::set-output name=target::install'
          fi

      - name: Build project
        run: mvn clean ${{ steps.maven_tuning.outputs.target }} -DskipTests
        env:
          MAVEN_QUIX_RW_USERNAME: ${{ secrets.NEXUS_QUIX_RW_USERNAME }}
          MAVEN_QUIX_RW_PASSWORD: ${{ secrets.NEXUS_QUIX_RW_PASSWORD }}

      - name: Save artifacts
        if: ${{ needs.init.outputs.make_artifact == 'true' }}
        uses: quix-it/gha-staging-artifacts-gcs@v1
        with:
          name: target
          direction: put
          path: ./target
        env:
          STAGING_GCLOUD_BUCKET: ${{ secrets.STAGING_GCLOUD_BUCKET }}

      - name: Send end-of-job notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

  docker-build:

    needs: [ init, build ]
    if: ${{ needs.init.outputs.make_artifact == 'true' }}

    runs-on: [ self-hosted, linux, gcp ]
    container:
      image: docker:latest
    env:
      DOCKER_REGISTRY: docker.quix.it

    steps:

      - name: Clean up workspace
        uses: quix-it/gha-clean-workspace@v1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore artifacts
        uses: quix-it/gha-staging-artifacts-gcs@v1
        with:
          name: target
          direction: get
          path: ./target
        env:
          STAGING_GCLOUD_BUCKET: ${{ secrets.STAGING_GCLOUD_BUCKET }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to docker registry
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.NEXUS_QUIX_RW_USERNAME }}
          password: ${{ secrets.NEXUS_QUIX_RW_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ needs.init.outputs.repository_name }}:${{ needs.init.outputs.maven_revision }}

      - name: Send end-of-job notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
